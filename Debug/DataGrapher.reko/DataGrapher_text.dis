void fn00411014(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ebx ecx edx esi Top
// Preserved: ebp esp
fn00411014_entry:
l00411014:
l00415280:
	word32 eax_10 = Mem6[0x0041B004:word32] ^ fp - 4
	Mem18[0x0041B580:word32] = 0x00000000
	Mem23[0x0041B034:word32] = Mem18[0x0041B034:word32] | 0x00000001
	branch fn0041106E(0x0000000A) != 0x00000000 l004152BB
l004152BB:
	byte bLoc30_342
	__cpuid(0x00000000, 0x00000000, &0x00000000, &ebx, &0x00000000, &edx)
	word32 dwLoc0C_334 = 0x00000000
	word32 edx_53 = ebx ^ 0x756E6547 | edx ^ 0x49656E69
	branch (edx_53 | 0x6C65746E) != 0x00000000 l00415335
l00415335:
	bLoc30_342 = 0x00 (alias)
l0041532C:
	bLoc30_342 = 0x01 (alias)
l0041533C:
	__cpuid(0x00000001, 0x00000000, &0x00000001, &ebx, &0x00000000, &(edx_53 | 0x6C65746E))
	branch (word32) bLoc30_342 == 0x00000000 l004153DF
l00415370:
	branch 0x00000000 == 0x000106C0 l004153D2
l0041537F:
	branch 0x00000000 == 0x00020660 l004153D2
l00415390:
	branch 0x00000000 == 0x00020670 l004153D2
l004153A1:
	branch 0x00000000 == 0x00030650 l004153D2
l004153B0:
	branch 0x00000000 == 0x00030660 l004153D2
l004153C1:
	branch true l004153DF
l004153D2:
	Mem114[0x0041B584:word32] = Mem80[0x0041B584:word32] | 0x00000001
l004153DF:
	branch true l00415465
l00415414:
	__cpuid(0x00000007, 0x00000000, &0x00000007, &ebx, &0x00000000, &0x00000000)
	dwLoc0C_334 = ebx
	branch (ebx & 0x00000200) == 0x00000000 l00415465
l00415456:
	Mem158[0x0041B584:word32] = Mem146[0x0041B584:word32] | 0x00000002
l00415465:
	Mem159[0x0041B580:word32] = 0x00000001
	Mem162[0x0041B034:word32] = Mem159[0x0041B034:word32] | 0x00000002
	edx = 0x00000000
	branch 0x00000000 == 0x00000000 l004155A0
l00415494:
	Mem171[0x0041B580:word32] = 0x00000002
	Mem174[0x0041B034:word32] = Mem171[0x0041B034:word32] | 0x00000004
	edx = 0x00000000
	branch 0x00000000 == 0x00000000 l004155A0
l004154C3:
	branch 0x00000000 == 0x00000000 l004155A0
l004154DB:
	word64 edx_eax_190 = __xgetbv(0x00000000)
	word32 eax_191 = SLICE(edx_eax_190, word32, 0)
	word32 edx_193 = SLICE(edx_eax_190, word32, 32)
	edx = eax_191 & 0x00000006
	branch (eax_191 & 0x00000006) != 0x00000006 l004155A0
l00415502:
	branch (edx_193 & 0x00000000) != 0x00000000 l004155A0
l0041550C:
	Mem205[0x0041B580:word32] = 0x00000003
	Mem208[0x0041B034:word32] = Mem205[0x0041B034:word32] | 0x00000008
	edx = 0x00000008
	branch (dwLoc0C_334 & 0x00000020) == 0x00000000 l004155A0
l00415535:
	Mem216[0x0041B580:word32] = 0x00000005
	Mem219[0x0041B034:word32] = Mem216[0x0041B034:word32] | 0x00000020
	edx = 0x00000008
	branch (dwLoc0C_334 & 0xD0030000) != 0xD0030000 l004155A0
l00415565:
	edx = edx_193 & 0x00000000
	branch (eax_191 & 0x000000E0) != 0x000000E0 l004155A0
l00415583:
	branch (edx_193 & 0x00000000) != 0x00000000 l004155A0
l00415589:
	Mem236[0x0041B580:word32] = 0x00000006
	Mem241[0x0041B034:word32] = Mem236[0x0041B034:word32] | 0x00000040
l004155A0:
l004152B4:
l004155A2:
	word32 edx_406
	fn00411249(eax_10 ^ fp - 4, edx, esi, fp - 4, 0x0000000A, edi, es, ds, esi, out edx_406)
	return
fn00411014_exit:


void fn00411028()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00411028_entry:
l00411028:
	call cexit (retsize: 0;)
	return
fn00411028_exit:


word32 fn00411046()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn00411046_entry:
l00411046:
l00413790:
	return Mem0[0x0041B51C:word32]
fn00411046_exit:


void fn0041105A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn0041105A_entry:
l0041105A:
	call SDL2.dll!SDL_RenderClear (retsize: 0;)
	return
fn0041105A_exit:


word32 fn00411064(selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00411064_entry:
l00411064:
l00415900:
	return fn00415920(es, ds, xmm0)
fn00411064_exit:


word32 fn0041106E(DWORD tArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn0041106E_entry:
l0041106E:
	return IsProcessorFeaturePresent(tArg04)
fn0041106E_exit:


void fn00411078()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00411078_entry:
l00411078:
	call _vcrt_GetModuleFileNameW (retsize: 0;)
	return
fn00411078_exit:


word32 fn0041107D(PVFV * ptrArg04, PVFV * ptrArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn0041107D_entry:
l0041107D:
	return _initterm_e(ptrArg04, ptrArg08)
fn0041107D_exit:


void fn0041108C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn0041108C_entry:
l0041108C:
	call SDL2.dll!SDL_GetWindowID (retsize: 0;)
	return
fn0041108C_exit:


void fn0041109B()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: al Top
// Preserved: ebp esp
fn0041109B_entry:
l0041109B:
l00415B40_in_fn0041109B:
	return
fn0041109B_exit:


void fn004110AF(byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn004110AF_entry:
l004110AF:
l00413EA0:
	branch fn004110FF() != 0x00000000 l00413EAE
l00413EAE:
	branch (word32) bArg04 == 0x00000000 l00413EB8
l00413EB8:
	Mem25[0x0041B52C:word32] = 0x00000000
l00413EB6:
l00413EAC:
l00413EC1:
	return
fn004110AF_exit:


void fn004110C8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004110C8_entry:
l004110C8:
	call register_thread_local_exe_atexit_callback (retsize: 0;)
	return
fn004110C8_exit:


word32 fn004110D2(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn004110D2_entry:
l004110D2:
l004110D2_thunk_fn00413370:
	return fn00413370(dwArg04)
fn004110D2_exit:


void fn004110EB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004110EB_entry:
l004110EB:
	call SDL2.dll!SDL_CreateRenderer (retsize: 0;)
	return
fn004110EB_exit:


word32 fn004110FF()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: ebp esp
fn004110FF_entry:
l004110FF:
l00415680:
	word32 dwLoc08_23
	branch Mem10[0x0041B038:word32] == 0x00000000 l00415696
l00415696:
	dwLoc08_23 = 0x00000000
l0041568D:
	dwLoc08_23 = 0x00000001
l0041569D:
	return dwLoc08_23
fn004110FF_exit:


void fn0041110E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: al Top
// Preserved: ebp esp
fn0041110E_entry:
l0041110E:
l00415B40:
	return
fn0041110E_exit:


void fn00411122(void * ptrArg04, int32 dwArg08, size_t tArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: eax Top
// Preserved: esp
fn00411122_entry:
l00411122:
	memset(ptrArg04, dwArg08, tArg0C)
	return
fn00411122_exit:


void fn00411127()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00411127_entry:
l00411127:
	call SDL2.dll!SDL_RenderPresent (retsize: 0;)
	return
fn00411127_exit:


void fn00411140()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00411140_entry:
l00411140:
	call SDL2.dll!SDL_Init (retsize: 0;)
	return
fn00411140_exit:


void fn0041114A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn0041114A_entry:
l0041114A:
l0041114A_thunk_fn00414690:
	fn00414690()
	return
fn0041114A_exit:


void fn0041114F()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn0041114F_entry:
l0041114F:
	call _vcrt_GetModuleHandleW (retsize: 0;)
	return
fn0041114F_exit:


byte fn00411154(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ebx ecx edx esi Top
// Preserved: esp
fn00411154_entry:
l00411154:
l00411154_thunk_fn00413BB0:
	return SLICE((uint32) (uint8) fn00413BB0(edx, ebx, esi, edi, es, ds, dwArg04), byte, 0)
fn00411154_exit:


word32 fn00411172(selector es, selector ds, word128 xmm0, word32 dwArg04, ptr32 & xmm0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] xmm0:[32..127]
// LiveOut: edx xmm0
// Trashed: SCZOP eax ecx edx Top xmm0
// Preserved: ebp ebx edi esi esp xmm1
fn00411172_entry:
l00411172:
l00411F50:
	word32 edi_19 = fp - 0x0000010C
	word32 ecx_20 = 0x00000042
l00411F6C:
	branch ecx_20 == 0x00000000 l00411F6E
l00411F6E:
	fn00411285(0x0041D02F)
	word16 ax_40 = SLICE((int32) ((int64) (word32) Mem31[dwArg04 + 0x00000006:word16] / 0x0000000A), word16, 0)
	word16 ax_50 = SLICE((int32) ((int64) (word32) Mem41[dwArg04 + 0x00000006:word16] / 0x00000064), word16, 0)
	word16 ax_60 = SLICE((int32) ((int64) (word32) Mem51[dwArg04 + 0x00000008:word16] / 0x0000000A), word16, 0)
	word16 ax_72 = SLICE((int32) ((int64) (word32) Mem61[dwArg04 + 0x00000008:word16] / 0x00000064), word16, 0)
	fn00411276()
	real32 v18_90 = (real32) (word32) Mem85[dwArg04 + 0x00000006:word16]
	word128 xmm0_353 = DPB(xmm0, v18_90, 0)
	real32 rLoc0C_413 = v18_90
l0041200C:
	branch rLoc0C_413 <u Mem96[0x00418B40:real32] l0041203E
l0041203E:
	word32 dwLoc18_415 = 0x00000000
l00412051:
	branch dwLoc18_415 > (word32) Mem104[dwArg04 + 0x00000008:word16] l0041207D
l0041207D:
	fn00411276()
	real32 v27_125 = (real32) (word32) Mem120[dwArg04 + 0x00000006:word16]
	word128 xmm0_127 = DPB(xmm0_353, v27_125, 0)
	real32 rLoc0C_424 = v27_125
l004120C5:
	word128 xmm0_132 = DPB(xmm0_127, rLoc0C_424, 0)
	branch rLoc0C_424 <u Mem131[0x00418B40:real32] l004120F7
l004120F7:
	word32 dwLoc18_426 = 0x00000000
l0041210A:
	branch dwLoc18_426 > (word32) Mem139[dwArg04 + 0x00000008:word16] l00412136
l00412136:
	fn00411276()
	fn00411212()
	fn00411212()
	fn00411276()
	fn004113E3()
	Mem242[dwArg04 + 0x00000004:byte] = 0x00
	fn0041128F(es, ds, dwLoc08)
	xmm0Out = xmm0_132
	return dwArg04
fn00411172_exit:
l00412116:
	fn00411212()
l00412100:
	dwLoc18_426 = (word32) ax_60 + dwLoc18_426
l004120D3:
	fn00411212()
l004120AF:
	xmm0_127 = DPB(xmm0_127, (real32) (word32) ax_40, 0)
	rLoc0C_424 = rLoc0C_424 - xmm0_127
l0041205D:
	fn00411212()
l00412047:
	dwLoc18_415 = (word32) ax_72 + dwLoc18_415
l0041201A:
	fn00411212()
l00411FF6:
	xmm0_353 = DPB(xmm0_353, (real32) (word32) ax_50, 0)
	rLoc0C_413 = rLoc0C_413 - xmm0_353
l00411F6C_1:
	Mem361[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


byte fn00411177()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al
// Trashed: al Top
// Preserved: ebp esp
fn00411177_entry:
l00411177:
l00415B10:
	return 0x01
fn00411177_exit:


void fn0041117C(char * ptrArg04, rsize_t tArg08, char * ptrArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: eax Top
// Preserved: esp
fn0041117C_entry:
l0041117C:
	strcat_s(ptrArg04, tArg08, ptrArg0C)
	return
fn0041117C_exit:


word32 fn0041119A(wchar_t * ptrArg04, size_t tArg08, wchar_t * ptrArg0C, wchar_t * ptrArg10, wchar_t * ptrArg14, wchar_t * ptrArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn0041119A_entry:
l0041119A:
	return _wmakepath_s(ptrArg04, tArg08, ptrArg0C, ptrArg10, ptrArg14, ptrArg18)
fn0041119A_exit:


word32 fn004111A9()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn004111A9_entry:
l004111A9:
l004137A0:
	return Mem0[0x0041B520:word32]
fn004111A9_exit:


void fn004111CC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004111CC_entry:
l004111CC:
	call SDL2.dll!SDL_SetMainReady (retsize: 0;)
	return
fn004111CC_exit:


void fn004111D6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004111D6_entry:
l004111D6:
	call SDL2.dll!SDL_Quit (retsize: 0;)
	return
fn004111D6_exit:


word32 fn004111E0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: eax Top
// Preserved: ebp esp
fn004111E0_entry:
l004111E0:
l004142F0:
	return 0x0041B598
fn004111E0_exit:


void fn004111EA(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004111EA_entry:
l004111EA:
l00412D60:
	word32 eax_10 = Mem6[0x0041B004:word32] ^ fp - 4
	word32 edi_23 = Mem22[0x0041B01C:word32]
	branch edi_23 == 0xFFFFFFFF l00412DFA
l00412D87:
	word32 eax_41
	branch Mem22[dwArg08:byte] == 0x00 l00412DE8
l00412D8C:
	branch fn00412ED0(dwArg08, out edx) >u 0x000003D3 l00412DE8
l00412DE8:
	eax_41 = 0x004190A0
l00412D9F:
	fn0041134D(fp - 0x00000408, 0x00000400, 0x00418BC4)
	fn0041117C(fp - 0x00000408, 0x00000400, dwArg08)
	fn0041117C(fp - 0x00000408, 0x00000400, 0x00418BE0)
	eax_41 = fp - 0x00000408
l00412DED:
	edx = fn00412EF0(edx, es, ds, dwArg04, edi_23, 0x00000002, eax_41)
l00412DFA:
	word32 edx_188
	fn00411249(eax_10 ^ fp - 4, edx, ebx, fp - 4, esi, edi, es, ds, ebx, out edx_188)
	return
fn004111EA_exit:


void fn004111EF()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: ebp esp
fn004111EF_entry:
l004111EF:
l00414780:
	return
fn004111EF_exit:


void fn00411203()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00411203_entry:
l00411203:
	call SDL2.dll!SDL_PollEvent (retsize: 0;)
	return
fn00411203_exit:


void fn00411212()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00411212_entry:
l00411212:
	call SDL2.dll!SDL_RenderDrawLine (retsize: 0;)
	return
fn00411212_exit:


byte fn00411217(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411217_entry:
l00411217:
l00413D20:
	word32 eax_151
	word32 eax_15 = Mem13[fs:0x00000000:word32]
	Mem38[fs:0x00000000:word32] = fp - 0x00000014
	word32 eax_47 = (uint32) (uint8) fn00413920(0x00400000)
	word24 eax_24_8_152 = SLICE(eax_47, word24, 8)
	branch (word32) SLICE(eax_47, byte, 0) != 0x00000000 l00413D8D
l00413D8D:
	word32 eax_70 = fn00413870(0x00400000, dwArg04 - 0x00400000)
	word24 eax_24_8_154 = SLICE(eax_70, word24, 8)
	branch eax_70 != 0x00000000 l00413DBF
l00413DBF:
	word24 eax_24_8_156 = SLICE(eax_70, word24, 8)
	branch (Mem78[eax_70 + 0x00000024:word32] & 0x80000000) == 0x00000000 l00413DDD
l00413DDD:
	eax_151 = SEQ(eax_24_8_156, 0x01) (alias)
l00413DCD:
	eax_151 = SEQ(eax_24_8_156, 0x00) (alias)
l00413DAF:
	eax_151 = SEQ(eax_24_8_154, 0x00) (alias)
l00413D7A:
	eax_151 = SEQ(eax_24_8_152, 0x00) (alias)
l00413E37:
	Mem103[fs:0x00000000:word32] = eax_15
	return SLICE(eax_151, byte, 0)
fn00411217_exit:


void fn00411221(PVFV * ptrArg04, PVFV * ptrArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00411221_entry:
l00411221:
	_initterm(ptrArg04, ptrArg08)
	return
fn00411221_exit:


byte fn00411230()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn00411230_entry:
l00411230:
l00414510:
	word32 eax_70
	word32 eax_11 = GetModuleHandleW(0x00000000)
	word24 eax_24_8_71 = SLICE(eax_11, word24, 8)
	branch eax_11 != 0x00000000 l0041452B
l0041452B:
	word24 eax_24_8_73 = SLICE(eax_11, word24, 8)
	branch (word32) Mem13[eax_11:word16] == 0x00005A4D l0041453D
l0041453D:
	word32 eax_22 = eax_11 + Mem13[eax_11 + 0x0000003C:word32]
	word24 eax_24_8_75 = SLICE(eax_22, word24, 8)
	branch Mem23[eax_22:word32] == 0x00004550 l00414558
l00414558:
	word32 eax_28 = (word32) Mem23[eax_22 + 0x00000018:word16]
	word24 eax_24_8_77 = SLICE(eax_28, word24, 8)
	branch eax_28 == 0x0000010B l0041456A
l0041456A:
	branch Mem23[eax_22 + 0x00000074:word32] >u 0x0000000E l00414577
l00414577:
	branch Mem23[eax_22 + 0x000000E8:word32] != 0x00000000 l0041458D
l0041458D:
	eax_70 = 0x00000001 (alias)
l00414589:
	eax_70 = 0x00000000 (alias)
l00414573:
	eax_70 = SEQ(eax_24_8_77, 0x00) (alias)
l00414566:
	eax_70 = SEQ(eax_24_8_77, 0x00) (alias)
l00414554:
	eax_70 = SEQ(eax_24_8_75, 0x00) (alias)
l00414539:
	eax_70 = SEQ(eax_24_8_73, 0x00) (alias)
l00414527:
	eax_70 = SEQ(eax_24_8_71, 0x00) (alias)
l0041458F:
	return SLICE(eax_70, byte, 0)
fn00411230_exit:


word32 fn00411249(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: DP esp
fn00411249_entry:
l00411249:
l00412590:
	branch ecx != Mem0[0x0041B004:word32] l0041259B
l0041259B:
l0041100F:
l0041100F_thunk_fn004133B0:
	word32 edx_21
	word32 eax_19 = fn004133B0(ecx, edx, ebx, ebp, esi, edi, es, ds, dwArg00, out edx_21)
	edxOut = edx_21
	return eax_19
l00412599:
	edxOut = edx
	return eax
fn00411249_exit:


void fn00411276()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00411276_entry:
l00411276:
	call SDL2.dll!SDL_SetRenderDrawColor (retsize: 0;)
	return
fn00411276_exit:


void fn0041127B()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn0041127B_entry:
l0041127B:
l004144A0:
	fn00411122(fp - 0x0000004C, 0x00000000, 0x00000044)
	GetStartupInfoW(fp - 0x0000004C)
	branch (dwLoc20 & 0x00000001) == 0x00000000 l004144D1
l004144D1:
l004144C8:
l004144D8:
	return
fn0041127B_exit:


void fn00411285(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: SCZO eax edx Top
// Preserved: esp
fn00411285_entry:
l00411285:
l00411285_thunk_fn00412540:
	fn00412540(ecx)
	return
fn00411285_exit:


void fn0041128F(selector es, selector ds, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31]
// LiveOut:
// Trashed: SCZO ecx Top
// Preserved: esp
fn0041128F_entry:
l0041128F:
l0041128F_thunk_fn00412500:
	fn00412500(es, ds, dwArg00)
	return
fn0041128F_exit:


word32 fn004112B2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: eax Top
// Preserved: ebp esp
fn004112B2_entry:
l004112B2:
l00414300:
	return 0x0041B58C
fn004112B2_exit:


void fn004112B7(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004112B7_entry:
l004112B7:
l004112B7_thunk_fn00412490:
	fn00412490(ecx, edx, es, ds, dwArg00)
	return
fn004112B7_exit:


void fn004112BC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004112BC_entry:
l004112BC:
	call SDL2.dll!SDL_CreateWindow (retsize: 0;)
	return
fn004112BC_exit:


DWORD Win32CrtStartup()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: eax
// Trashed: eax
// Preserved:
Win32CrtStartup_entry:
l004112C1:
l00412B10:
	return fn00412780(ebx, esi, edi, es, ds, xmm0)
Win32CrtStartup_exit:


void fn004112C6(byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0008:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn004112C6_entry:
l004112C6:
l00413ED0:
	branch (word32) Mem6[0x0041B530:byte] == 0x00000000 l00413EEA
l00413EDE:
	branch (word32) bArg08 == 0x00000000 l00413EEA
l00413EEA:
	fn0041109B()
	fn0041110E()
l00413EE6:
l00413F06:
	return
fn004112C6_exit:


void fn004112DA(int32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn004112DA_exit:
fn004112DA_entry:
l004112DA:
	exit(dwArg04)


word32 fn004112E9(wchar_t * ptrArg04, wchar_t * ptrArg08, size_t tArg0C, wchar_t * ptrArg10, size_t tArg14, wchar_t * ptrArg18, size_t tArg1C, wchar_t * ptrArg20, size_t tArg24)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn004112E9_entry:
l004112E9:
	return _wsplitpath_s(ptrArg04, ptrArg08, tArg0C, ptrArg10, tArg14, ptrArg18, tArg1C, ptrArg20, tArg24)
fn004112E9_exit:


void fn004112EE(selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: esp
fn004112EE_entry:
l004112EE:
l004112EE_thunk_fn00412CF0:
	fn00412CF0(es, ds, dwArg04, dwArg08)
	return
fn004112EE_exit:


word32 fn00411307(selector es, selector ds, word128 xmm0, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: eax ebx
// Trashed: SCZOP eax ebx ecx edi edx esi Top
// Preserved: ebp esp xmm0
fn00411307_entry:
l00411307:
l00411A90:
	word32 edi_19 = fp - 0x000001AC
	word32 ecx_20 = 0x0000006A
l00411AAC:
	branch ecx_20 == 0x00000000 l00411AAE
l00411AAE:
	word32 eax_293
	word32 eax_26 = Mem23[0x0041B004:word32] ^ fp - 4
	fn00411285(0x0041D049)
	word32 eax_45 = malloc(0x00000018)
	fn0041128F(es, ds, 0x00000018)
	Mem63[eax_45 + 0x00000006:word16] = 0x0190
	Mem67[eax_45 + 0x00000008:word16] = 0x01F4
	Mem72[eax_45:word32] = (word32) Mem67[eax_45 + 0x00000008:word16] + 0x00000014
	word32 eax_75 = Mem72[eax_45:word32]
	word32 ecx_86 = -(uint32) (uint8) OVERFLOW(eax_75 *u 0x00000008) | SLICE(eax_75 *u 0x00000008, word32, 0)
	word32 eax_90 = malloc(ecx_86)
	fn0041128F(es, ds, ecx_86)
	Mem99[eax_45 + 0x0000000C:word32] = eax_90
	Mem101[eax_45 + 0x00000004:byte] = 0x00
	Mem103[eax_45 + 0x00000005:byte] = 0x00
	Mem107[eax_45 + 0x00000014:word16] = 0x03FF
	fn00411140()
	fn004112BC()
	fn004110EB()
	word32 eax_142 = malloc(0x00000004)
	fn0041128F(es, ds, 0x00000004)
	fn0041108C()
	Mem156[eax_142:word32] = 0x000002BC
	word32 eax_172 = CreateFileW(0x00418B44, 0x80000000, 0x00000000, 0x00000000, 0x00000003, 0x00000000, 0x00000000)
	fn0041128F(es, ds, 0x00000000)
	Mem181[eax_45 + 0x00000010:word32] = eax_172
	byte bLoc31_547 = 0x00
	word32 edx_124 = 0x00418B30
	word32 esp_173 = fp - 0x000001B8
	branch Mem181[eax_45 + 0x00000010:word32] != 0xFFFFFFFF l00411C17
l00411C17:
	GetCommState(Mem197[eax_45 + 0x00000010:word32], fp - 0x000000C8)
	fn0041128F(es, ds, fp - 0x000000C8)
	SetCommState(Mem217[eax_45 + 0x00000010:word32], fp - 0x000000C8)
	fn0041128F(es, ds, fp - 0x000000C8)
	edx_124 = Mem244[eax_45 + 0x00000010:word32]
	word32 eax_249 = SetCommTimeouts(edx_124, fp - 0x000000E4)
	fn0041128F(es, ds, fp - 0x000000E4)
	esp_173 = fp - 0x000001B8
	branch eax_249 != 0x00000000 l00411D23
l00411D23:
	branch (word32) bLoc31_547 != 0x00000000 l00411E1D
l00411E1D:
	branch (word32) Mem267[eax_45 + 0x00000005:byte] == 0x00000000 l00411E3B
l00411E3B:
	fn004111D6()
	word32 esp_277 = esp_173 - 4
	Mem278[esp_277:word32] = Mem267[eax_45 + 0x00000010:word32]
	CloseHandle(Mem278[esp_277:HANDLE])
	fn0041128F(es, ds, Mem278[esp_277:word32])
	esp_173 = esp_277 + 0x00000004
	eax_293 = 0x00000000
l00411E28:
	word32 esp_297 = esp_173 - 4
	Mem298[esp_297:word32] = 0x0000000A
	Sleep(Mem298[esp_297:DWORD])
	fn0041128F(es, ds, Mem298[esp_297:word32])
l00411D2F:
	word32 esp_309 = esp_173 - 4
	Mem310[esp_309:word32] = fp - 0x00000074
	fn00411203()
	branch fp == 0x00000074 l00411D8A
l00411D8A:
	branch (word32) Mem310[eax_45 + 0x00000004:byte] == 0x00000000 l00411DE9
l00411D95:
	Mem321[esp_309:word32] = 0x000000FF
	Mem323[esp_309 - 4:word32] = 0x000000FF
	Mem325[esp_309 - 8:word32] = 0x000000FF
	Mem327[esp_309 - 12:word32] = 0x000000FF
	Mem330[esp_309 - 16:word32] = 0x000002BC
	fn00411276()
	Mem335[esp_309:word32] = 0x000002BC
	fn0041105A()
	Mem340[esp_309:word32] = 0x000002BC
	Mem343[esp_309 - 4:word32] = eax_45
	edx_124 = fn00411172(es, ds, xmm0, Mem343[esp_309 - 4:word32], out xmm0)
	Mem364[esp_309:word32] = 0x000002BC
	fn00411127()
l00411DE9:
	branch (word32) Mem368[eax_45 + 0x00000005:byte] != 0x00000000 l00411E18
l00411DF4:
	word32 esp_377 = esp_173 - 4
	Mem378[esp_377:word32] = eax_45
	Mem380[esp_377 - 4:word32] = 0x00000000
	Mem382[esp_377 - 8:word32] = 0x004110F5
	word32 esp_389
	call beginthread (retsize: 4;)
		uses: eax:eax_45,Stack +FFFFFF90:dwLoc74,Stack +FFFFFF9C:bLoc68,Stack +FFFFFFA0:dwLoc64,Stack +FFFFFFA4:dwLoc60
		defs: edx:edx_392,esp:esp_389
	fn0041128F(es, ds, Mem382[esp_389 + 0x00000008:word32])
	Mem409[eax_45 + 0x00000005:byte] = 0x01
	esp_173 = esp_389 + 0x0000000C
l00411E18:
l00411D3F:
	branch dwLoc74 == 0x00000100 l00411D62
l00411D62:
	bLoc31_547 = 0x01
l00411D54:
	branch dwLoc74 == 0x00000200 l00411D68
l00411D68:
	branch bLoc68 == 0x06 l00411D7C
l00411D7C:
l00411D7A:
l00411D60:
l00411D88:
l00411D19:
	eax_293 = 0x00000004
l00411C0D:
	eax_293 = 0x00000001
l00411E58:
	word32 esp_428 = esp_173 - 4
	Mem436[esp_428:word32] = edx_124
	Mem441[esp_428 - 4:word32] = eax_293
	fn004112B7(fp - 4, 0x00411E88, es, ds, Mem441[esp_428 + -8:word32])
	word32 ebx_464 = Mem441[esp_428 + 12:word32]
	word32 edx_681
	word32 eax_470 = fn00411249(eax_26 ^ fp - 4, Mem441[esp_428:word32], ebx_464, fp - 4, Mem441[esp_428 + 8:word32], Mem441[esp_428 + 4:word32], es, ds, Mem441[esp_428 + 12:word32], out edx_681)
	fn0041128F(es, ds, Mem441[esp_428 + 0x000001B4:word32])
	ebxOut = ebx_464
	return eax_470
fn00411307_exit:
l00411AAC_1:
	Mem489[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


word32 fn00411348()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00411348_entry:
l00411348:
l00411348_thunk_fn004140C0:
	return fn004140C0()
fn00411348_exit:


void fn0041134D(char * ptrArg04, rsize_t tArg08, char * ptrArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: eax Top
// Preserved: esp
fn0041134D_entry:
l0041134D:
	strcpy_s(ptrArg04, tArg08, ptrArg0C)
	return
fn0041134D_exit:


void fn00411357()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00411357_entry:
l00411357:
	call _vcrt_LoadLibraryExW (retsize: 0;)
	return
fn00411357_exit:


byte fn0041135C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al
// Trashed: al Top
// Preserved: ebp esp
fn0041135C_entry:
l0041135C:
l00415B10_in_fn0041135C:
	return 0x01
fn0041135C_exit:


void fn00411361(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp esp
fn00411361_entry:
l00411361:
l00414310:
	branch fn0041106E(0x00000017) == 0x00000000 l00414329
l00414329:
	byte bLoc05_151
	fn0041114A()
	fn00411122(fp - 0x00000330, 0x00000000, 0x000002CC)
	fn00411122(fp - 0x00000064, 0x00000000, 0x00000050)
	branch IsDebuggerPresent() != 0x00000001 l004143FB
l004143FB:
	bLoc05_151 = 0x00
l004143F5:
	bLoc05_151 = 0x01
l004143FF:
	SetUnhandledExceptionFilter(0x00000000)
	branch UnhandledExceptionFilter(fp - 0x00000014) != 0x00000000 l00414441
l0041442F:
	branch (word32) bLoc05_151 != 0x00000000 l00414441
l00414437:
	fn0041114A()
l00414441:
	return
fn00411361_exit:
l00414324:
	__fastfail(dwArg04)


void fn004113B1()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004113B1_entry:
l004113B1:
	call get_narrow_winmain_command_line (retsize: 0;)
	return
fn004113B1_exit:


word32 fn004113CF(wchar_t * ptrArg04, rsize_t tArg08, wchar_t * ptrArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn004113CF_entry:
l004113CF:
	return wcscpy_s(ptrArg04, tArg08, ptrArg0C)
fn004113CF_exit:


void fn004113E3()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004113E3_entry:
l004113E3:
	call SDL2.dll!SDL_RenderDrawLines (retsize: 0;)
	return
fn004113E3_exit:


word32 fn004113F7()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: eax
// Trashed: eax Top
// Preserved: ebp esp
fn004113F7_entry:
l004113F7:
l004139B0:
	return Mem6[fs:0x00000018:word32]
fn004113F7_exit:


byte fn004113FC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn004113FC_entry:
l004113FC:
l004139C0:
	word32 eax_55
	word32 eax_10 = fn004110FF()
	word24 eax_24_8_56 = SLICE(eax_10, word24, 8)
	branch eax_10 != 0x00000000 l004139D3
l004139D3:
	word32 eax_20 = Mem6[fn004113F7() + 0x00000004:word32]
l004139DE:
	__lock()
	word32 eax_27
	__cmpxchg(Mem23[0x0041B52C:word32], eax_20, 0x00000000, out eax_27)
	word24 eax_24_8_60 = SLICE(eax_27, word24, 8)
	branch eax_27 == 0x00000000 l00413A03
l00413A03:
	eax_55 = SEQ(eax_24_8_60, 0x00) (alias)
l004139F5:
	word24 eax_24_8_58 = SLICE(eax_20, word24, 8)
	branch eax_20 != eax_27 l00413A01
l00413A01:
l004139FD:
	eax_55 = SEQ(eax_24_8_58, 0x01) (alias)
l004139CF:
	eax_55 = SEQ(eax_24_8_56, 0x00) (alias)
l00413A05:
	return SLICE(eax_55, byte, 0)
fn004113FC_exit:


word32 fn00411401(selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31]
// LiveOut: edi
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00411401_entry:
l00411401:
l00414DA0:
	Mem18[dwArg10:word32] = 0x00000000
	Mem27[dwArg08:word16] = 0x0000
	word32 eax_33 = VirtualQuery(dwArg04 - 0x00000001, fp - 0x00000050, 0x0000001C)
	branch eax_33 == 0x00000000 l00415117
l00414DD3:
	fn00411078()
	branch eax_33 == 0x00000000 l00415117
l00414DEC:
	branch Mem46[dwLoc4C:word16] != 0x5A4D l00415117
l00414DFD:
	word32 ecx_56 = Mem46[dwLoc4C + 0x0000003C:word32]
	branch ecx_56 <= 0x00000000 l00415117
l00414E08:
	word32 ecx_59 = ecx_56 + dwLoc4C
	branch Mem46[ecx_59:word32] != 0x00004550 l00415117
l00414E16:
	word32 edx_62 = (word32) Mem46[ecx_59 + 0x00000014:word16]
	word32 esi_63 = dwArg04 - 0x00000001 - dwLoc4C
	word32 edi_64 = (word32) Mem46[ecx_59 + 0x00000006:word16]
	word32 edx_142 = edx_62 + 0x00000020
	word32 ebx_145 = 0x00000000
	word32 eax_67 = 0x00000000
	branch edi_64 == 0x00000000 l00414E47
l00414E2B:
	word32 ecx_73 = ecx_59 + (edx_62 + 0x00000020) + 0x00000004
l00414E30:
	edx_142 = Mem46[ecx_73 + 0x00000000:word32]
	branch esi_63 <u edx_142 l00414E3F
l00414E37:
	ebx_145 = esi_63 - edx_142
	branch esi_63 <u Mem46[ecx_73:word32] l00414E4F
l00414E3F:
	eax_67 = eax_67 + 0x00000001
	ecx_73 = ecx_73 + 0x00000028
	branch eax_67 <u edi_64 l00414E30
l00414E47:
	branch eax_67 == edi_64 l00415117
l00414E4F:
	word32 eax_109
	word32 eax_98 = eax_67 + 0x00000001
	branch Mem46[0x0041B57D:byte] != 0x00 l00414E84
l00414E84:
	eax_109 = Mem107[0x0041B578:word32]
l00414E5C:
	branch Mem107[0x0041B578:word32] != 0x00000000 l00415117
l00414E69:
	eax_109 = fn00414810(edx_142, ebx_145, esi_63, edi_64, es, ds, out ebx_145)
	Mem163[0x0041B578:word32] = eax_109
	branch eax_109 == 0x00000000 l00415117
l00414E7B:
	Mem167[0x0041B57D:byte] = 0x01
l00414E89:
	word32 eax_178 = GetProcAddress(eax_109, 0x0041952C)
	branch eax_178 == 0x00000000 l00415117
l00414E9F:
	fn004111EF()
	branch eax_178() == 0x00000000 l00415117
l00415117:
	return edi
l00414EC9:
	word32 esi_246 = Mem244[Mem244[dwLoc1C:word32]:word32]
	fn004111EF()
	word32 esp_249
	word32 eax_250
	word32 edx_252
	call esi_246 (retsize: 4;)
		uses: ecx:dwLoc1C,edx:edx_252,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +0030:dwLoc30,Stack +0034:dwLoc2C,Stack +003C:dwLoc24,Stack +0040:dwLoc20,Stack +0044:dwLoc1C,Stack +0048:dwLoc18,Stack +004C:dwLoc14,Stack +0058:wLoc08,Stack +0064:dwArg04,Stack +0068:dwArg08,Stack +0070:dwArg10,Stack +0074:dwArg14,Stack +0078:dwArg18,Stack +FFFFFFB8:dwLoc4C,Stack +FFFFFFE8:dwLoc1C
		defs: eax:eax_250,edx:edx_252,esp:esp_249
	branch eax_250 != 0x01329141 l00415034
l00414EF5:
	word32 esi_259 = Mem244[Mem244[dwLoc1C:word32] + 0x0000001C:word32]
	Mem262[esp_249 - 4:word32] = fp - 0x00000024
	Mem264[esp_249 - 8:word32] = 0x00419540
	Mem266[esp_249 - 12:word32] = 0x00000000
	fn004111EF()
	word32 esp_269
	word32 eax_270
	word32 edx_272
	call esi_259 (retsize: 4;)
		uses: ecx:dwLoc1C,edx:edx_272,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C,Stack +FFFFFFD4:dwLoc30,Stack +FFFFFFD8:dwLoc2C,Stack +FFFFFFE0:dwLoc24,Stack +FFFFFFE4:dwLoc20,Stack +FFFFFFE8:dwLoc1C,Stack +FFFFFFEC:dwLoc18,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFFC:wLoc08
		defs: eax:eax_270,edx:edx_272,esp:esp_269
	branch eax_270 == 0x00000000 l00415034
l00414F1C:
	Mem280[esp_269 - 4:word32] = 0x00000000
	Mem282[esp_269 - 8:word32] = 0x00000000
	Mem284[esp_269 - 12:word32] = 0x00000000
	word32 esi_286 = Mem284[Mem284[dwLoc24:word32] + 0x00000020:word32]
	Mem289[esp_269 - 16:word32] = fp - 0x00000018
	Mem291[esp_269 - 20:word32] = ebx_145
	Mem294[esp_269 - 24:word32] = eax_98
	fn004111EF()
	word32 esp_297
	word32 eax_298
	word32 edx_300
	call esi_286 (retsize: 4;)
		uses: ecx:dwLoc24,edx:edx_300,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C,Stack +FFFFFFD4:dwLoc30,Stack +FFFFFFD8:dwLoc2C,Stack +FFFFFFE0:dwLoc24,Stack +FFFFFFE4:dwLoc20,Stack +FFFFFFE8:dwLoc1C,Stack +FFFFFFEC:dwLoc18,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFFC:wLoc08
		defs: eax:eax_298,edx:edx_300,esp:esp_297
	branch eax_298 == 0x00000000 l00415020
l00414F46:
	word32 esi_308 = Mem294[Mem294[dwLoc18:word32] + 0x00000068:word32]
	Mem311[esp_297 - 4:word32] = fp - 0x0000000C
	fn004111EF()
	word32 eax_315
	word32 edx_317
	call esi_308 (retsize: 4;)
		uses: ecx:dwLoc18,edx:edx_317,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C,Stack +FFFFFFD4:dwLoc30,Stack +FFFFFFD8:dwLoc2C,Stack +FFFFFFE0:dwLoc24,Stack +FFFFFFE4:dwLoc20,Stack +FFFFFFE8:dwLoc1C,Stack +FFFFFFEC:dwLoc18,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFFC:wLoc08
		defs: eax:eax_315,edx:edx_317
	branch SLICE(eax_315, byte, 0) == 0x00 l0041500C
l00414F66:
	branch 0x00000000 == 0x00000000 l0041500C
l00414F71:
	word32 ecx_438
	word32 esi_329 = Mem311[Mem311[0x00000000:word32] + 0x00000008:word32]
	fn004111EF()
	word32 eax_333
	word32 edx_335
	word32 esp_332
	call esi_329 (retsize: 4;)
		uses: ecx:0x00000000,edx:edx_335,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C,Stack +FFFFFFD4:dwLoc30,Stack +FFFFFFD8:dwLoc2C,Stack +FFFFFFE0:dwLoc24,Stack +FFFFFFE4:dwLoc20,Stack +FFFFFFE8:dwLoc1C,Stack +FFFFFFEC:dwLoc18,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFFC:wLoc08
		defs: eax:eax_333,edx:edx_335,esp:esp_332
	branch eax_333 == 0x00000000 l00414FE7
l00414F86:
	word32 esp_345 = esp_332 - 4
	Mem346[esp_345:word32] = 0x00000000
	word32 esi_348 = Mem346[Mem346[0x00000000:word32] + 0x0000000C:word32]
	Mem351[esp_345 - 4:word32] = fp - 0x00000014
	Mem355[esp_345 - 8:word32] = fp - 0x0000002C
	Mem358[esp_345 - 12:word32] = fp - 0x00000008
	Mem361[esp_345 - 16:word32] = fp - 0x00000020
	Mem363[esp_345 - 20:word32] = 0x00000000
	fn004111EF()
	word32 esp_373
	word32 eax_374
	word32 edx_376
	call esi_348 (retsize: 4;)
		uses: ecx:0x00000000,edx:edx_376,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C,Stack +FFFFFFD4:dwLoc30,Stack +FFFFFFD8:dwLoc2C,Stack +FFFFFFE0:dwLoc24,Stack +FFFFFFE4:dwLoc20,Stack +FFFFFFE8:dwLoc1C,Stack +FFFFFFEC:dwLoc18,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFFC:wLoc08
		defs: eax:eax_374,edx:edx_376,esp:esp_373
	branch SLICE(eax_374, byte, 0) == 0x00 l00414FF9
l00414FB2:
	branch (word32) wLoc08 != eax_98 l00414FCF
l00414FBB:
	branch dwLoc20 >u ebx_145 l00414FCF
l00414FC2:
	branch ebx_145 <u dwLoc2C + dwLoc20 l00415052
l00415052:
	branch dwLoc14 == 0x00000000 l00414FF9
l00415059:
	branch dwLoc14 >=u 0x1FFFFFFF l00414FF9
l00415061:
	word32 eax_400 = GetProcessHeap()
	Mem402[esp_373 - 4:word32] = dwLoc14 << 0x00000003
	Mem404[esp_373 - 8:word32] = 0x00000000
	Mem406[esp_373 - 12:word32] = eax_400
	word32 eax_407 = HeapAlloc(Mem406[esp_373 - 12:HANDLE], Mem406[esp_373 - 8:DWORD], Mem406[esp_373 - 4:SIZE_T])
	branch eax_407 == 0x00000000 l00414FF9
l0041507F:
	Mem415[esp_373 - 4:word32] = eax_407
	Mem418[esp_373 - 8:word32] = fp - 0x00000014
	word32 ecx_419 = Mem418[0x00000000:word32]
	Mem422[esp_373 - 12:word32] = 0x00000000
	Mem424[esp_373 - 16:word32] = 0x00000000
	Mem426[esp_373 - 20:word32] = 0x00000000
	word32 esi_427 = Mem426[ecx_419 + 0x0000000C:word32]
	Mem430[esp_373 - 24:word32] = fp - 0x00000030
	fn004111EF()
	word32 eax_433
	word32 edx_435
	call esi_427 (retsize: 4;)
		uses: ecx:0x00000000,edx:edx_435,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C,Stack +FFFFFFD4:dwLoc30,Stack +FFFFFFD8:dwLoc2C,Stack +FFFFFFE0:dwLoc24,Stack +FFFFFFE4:dwLoc20,Stack +FFFFFFE8:dwLoc1C,Stack +FFFFFFEC:dwLoc18,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFFC:wLoc08
		defs: eax:eax_433,edx:edx_435,esp:esp_432
	ecx_438 = eax_407
	branch SLICE(eax_433, byte, 0) == 0x00 l00414FE9
l004150AD:
	word32 ebx_443 = ebx_145 - dwLoc20
	branch ebx_443 <u Mem430[eax_407:word32] l00414FE9
l004150B8:
	word32 eax_447 = 0x00000001
	branch dwLoc14 <=u 0x00000001 l004150CE
l004150C4:
	branch ebx_443 <u Mem430[eax_407 + eax_447 * 0x00000008:word32] l004150CE
l004150C9:
	eax_447 = eax_447 + 0x00000001
	branch eax_447 <u dwLoc14 l004150C4
l004150CE:
	word32 eax_463 = Mem430[eax_407 - 0x00000004 + eax_447 * 0x00000008:word32]
	Mem474[esp_332 - 4:word32] = 0x00000000
	Mem476[esp_332 - 8:word32] = 0x00000000
	Mem477[dwArg10:word32] = eax_463 & 0x00FFFFFF
	word32 eax_478 = Mem477[dwLoc18:word32]
	Mem480[esp_332 - 12:word32] = 0x00000000
	word32 esi_481 = Mem480[eax_478 + 0x00000070:word32]
	Mem484[esp_332 - 16:word32] = fp + 0x0000000C
	Mem487[esp_332 - 20:word32] = dwArg08
	Mem491[esp_332 - 24:word32] = dwLoc30
	fn004111EF()
	word32 eax_509
	word32 edx_511
	call esi_481 (retsize: 4;)
		uses: ecx:dwLoc18,edx:edx_511,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C,Stack +FFFFFFD4:dwLoc30,Stack +FFFFFFD8:dwLoc2C,Stack +FFFFFFE0:dwLoc24,Stack +FFFFFFE4:dwLoc20,Stack +FFFFFFE8:dwLoc1C,Stack +FFFFFFEC:dwLoc18,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFFC:wLoc08
		defs: eax:eax_509,edx:edx_511,esp:esp_508
	ecx_438 = eax_407
	branch SLICE(eax_509, byte, 0) == 0x00 l00414FE9
l0041510B:
l00414FCF:
	word32 esi_524 = Mem363[Mem363[0x00000000:word32] + 0x00000008:word32]
	fn004111EF()
	word32 eax_537
	word32 edx_539
	call esi_524 (retsize: 4;)
		uses: ecx:0x00000000,edx:edx_539,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C,Stack +FFFFFFD4:dwLoc30,Stack +FFFFFFD8:dwLoc2C,Stack +FFFFFFE0:dwLoc24,Stack +FFFFFFE4:dwLoc20,Stack +FFFFFFE8:dwLoc1C,Stack +FFFFFFEC:dwLoc18,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFFC:wLoc08
		defs: eax:eax_537,edx:edx_539,esp:esp_536
	branch eax_537 != 0x00000000 l00414F86
l00414FE7:
	ecx_438 = 0x00000000
l00414FE9:
	word32 esp_550 = esp_332 - 4
	Mem552[esp_550:word32] = ecx_438
	Mem554[esp_550 - 4:word32] = 0x00000000
	Mem557[esp_550 - 8:word32] = GetProcessHeap()
	HeapFree(Mem557[esp_550 - 8:HANDLE], Mem557[esp_550 - 4:DWORD], Mem557[esp_550:LPVOID])
l00414FF9:
	word32 esi_566 = Mem563[Mem563[0x00000000:word32]:word32]
	fn004111EF()
	word32 edx_597
	call esi_566 (retsize: 4;)
		uses: ecx:0x00000000,edx:edx_597,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C,Stack +FFFFFFD4:dwLoc30,Stack +FFFFFFD8:dwLoc2C,Stack +FFFFFFE0:dwLoc24,Stack +FFFFFFE4:dwLoc20,Stack +FFFFFFE8:dwLoc1C,Stack +FFFFFFEC:dwLoc18,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFFC:wLoc08
		defs: edx:edx_597
l0041500C:
	word32 esi_604 = Mem601[Mem601[dwLoc18:word32] + 0x00000040:word32]
	fn004111EF()
	word32 edx_619
	call esi_604 (retsize: 4;)
		uses: ecx:dwLoc18,edx:edx_619,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C,Stack +FFFFFFD4:dwLoc30,Stack +FFFFFFD8:dwLoc2C,Stack +FFFFFFE0:dwLoc24,Stack +FFFFFFE4:dwLoc20,Stack +FFFFFFE8:dwLoc1C,Stack +FFFFFFEC:dwLoc18,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFFC:wLoc08
		defs: edx:edx_619
l00415020:
	word32 esi_626 = Mem623[Mem623[dwLoc24:word32] + 0x00000038:word32]
	fn004111EF()
	word32 edx_641
	call esi_626 (retsize: 4;)
		uses: ecx:dwLoc24,edx:edx_641,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C,Stack +FFFFFFD4:dwLoc30,Stack +FFFFFFD8:dwLoc2C,Stack +FFFFFFE0:dwLoc24,Stack +FFFFFFE4:dwLoc20,Stack +FFFFFFE8:dwLoc1C,Stack +FFFFFFEC:dwLoc18,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFFC:wLoc08
		defs: edx:edx_641
l00415034:
	word32 esi_648 = Mem645[Mem645[dwLoc1C:word32] + 0x0000002C:word32]
	fn004111EF()
	word32 esp_660
	word32 edx_663
	call esi_648 (retsize: 4;)
		uses: ecx:dwLoc1C,edx:edx_663,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C,Stack +FFFFFFD4:dwLoc30,Stack +FFFFFFD8:dwLoc2C,Stack +FFFFFFE0:dwLoc24,Stack +FFFFFFE4:dwLoc20,Stack +FFFFFFE8:dwLoc1C,Stack +FFFFFFEC:dwLoc18,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFFC:wLoc08
		defs: edx:edx_663,esp:esp_660
	return Mem645[esp_660:word32]
fn00411401_exit:


void fn0041140B()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn0041140B_entry:
l0041140B:
	call SDL2.dll!SDL_ShowSimpleMessageBox (retsize: 0;)
	return
fn0041140B_exit:


void fn00412490(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00412490_entry:
l00412490:
	word32 esi_20 = 0x00000000
	branch Mem19[edx:word32] <= 0x00000000 l004124E2
l004124A1:
	word32 edi_26 = 0x00000000
l004124A4:
	word32 ecx_31 = Mem30[edx + 0x00000004:word32]
	word32 edx_35 = Mem30[ecx_31 + edi_26:word32]
	branch Mem30[edx_35 - 0x00000004 + ecx:word32] != 0xCCCCCCCC l004124C9
l004124B7:
	edx_35 = ecx
	branch Mem30[Mem30[ecx_31 + 0x00000004 + edi_26:word32] + edx_35 + ecx:word32] == 0xCCCCCCCC l004124D9
l004124C9:
	fn004111EA(edx_35, edx, esi_20, edi_26, es, ds, dwArg00, Mem30[ecx_31 + 0x00000008 + edi_26:word32])
l004124D9:
	esi_20 = esi_20 + 0x00000001
	edi_26 = edi_26 + 0x0000000C
	branch esi_20 < Mem85[edx:word32] l004124A4
l004124E1:
l004124E2:
	return
fn00412490_exit:


void fn00412500(selector es, selector ds, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31]
// LiveOut:
// Trashed: SCZO ecx Top
// Preserved: eax ebp ebx edi edx esi esp
fn00412500_entry:
l00412500:
	branch Z l00412505
l00412505:
	fn004112EE(es, ds, dwArg00, 0x00000000)
	return
l00412503:
	return
fn00412500_exit:


void fn00412540(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: SCZO eax edx Top
// Preserved: ebp ecx esp
fn00412540_entry:
l00412540:
	branch (word32) Mem12[ecx:byte] == 0x00000000 l00412571
l00412559:
	branch Mem12[0x0041B5A4:word32] == 0x00000000 l00412571
l00412562:
	branch Mem12[0x0041B5A4:word32] != GetCurrentThreadId() l00412571
l00412570:
l00412571:
	return
fn00412540_exit:


word32 fn00412780(word32 ebx, word32 esi, word32 edi, selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: eax
// Trashed: SCZDOP eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00412780_entry:
l00412780:
	return fn004127A0(fn00411348(), ebx, esi, edi, es, ds, xmm0)
fn00412780_exit:


word32 fn004127A0(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: eax
// Trashed: SCZDOP eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn004127A0_entry:
l004127A0:
	word32 eax_15 = Mem13[fs:0x00000000:word32]
	Mem38[fs:0x00000000:word32] = fp - 0x00000014
	word32 esp_107 = fp + 0xFFFFFFA8
	branch (word32) SLICE((uint32) (uint8) fn00411154(edx, ebx, esi, edi, es, ds, 0x00000001), byte, 0) != 0x00000000 l004127EB
l004127E4:
	fn00411361(0x00000007)
	esp_107 = fp + 0xFFFFFFA4
l004127EB:
	word32 eax_112
	byte bLoc1D_321 = 0x00
	byte al_85 = SLICE((uint32) (uint8) fn004113FC(), byte, 0)
	branch Mem86[0x0041B528:word32] != 0x00000001 l00412810
l00412810:
	branch Mem86[0x0041B528:word32] != 0x00000000 l0041286D
l0041286D:
	bLoc1D_321 = 0x01
l00412819:
	Mem92[0x0041B528:word32] = 0x00000001
	word32 esp_94 = esp_107 - 4
	Mem95[esp_94:word32] = 0x00418618
	Mem97[esp_94 - 4:word32] = 0x0041830C
	branch fn0041107D(Mem97[esp_94 - 4:(ptr32 PVFV)], Mem97[esp_94:(ptr32 PVFV)]) == 0x00000000 l0041284F
l0041284F:
	Mem104[esp_94:word32] = 0x00418208
	Mem106[esp_94 - 4:word32] = 0x00418000
	fn00411221(Mem106[esp_94 - 4:(ptr32 PVFV)], Mem106[esp_94:(ptr32 PVFV)])
	Mem109[0x0041B528:word32] = 0x00000002
	esp_107 = esp_94 + 0x00000004
l00412839:
	eax_112 = 0x000000FF
l00412807:
	esp_107 = esp_107 - 4
	Mem114[esp_107:word32] = 0x00000007
	fn00411361(Mem114[esp_107:word32])
l00412871:
	word32 esp_128 = esp_107 - 4
	Mem129[esp_128:word32] = (word32) al_85
	fn004110AF(Mem129[esp_128:byte])
	word32 esp_137 = esp_128 + 0x00000004
	word32 eax_139 = fn004111E0()
	branch Mem140[eax_139:word32] == 0x00000000 l004128C1
l0041288E:
	Mem146[esp_128:word32] = eax_139
	esp_137 = esp_128 + 0x00000004
	branch (word32) SLICE((uint32) (uint8) fn00411217(Mem146[esp_128:word32]), byte, 0) == 0x00000000 l004128C1
l004128A1:
	word32 eax_162 = Mem146[eax_139:word32]
	Mem165[esp_128:word32] = 0x00000000
	Mem167[esp_128 - 4:word32] = 0x00000002
	Mem169[esp_128 - 8:word32] = 0x00000000
	fn004111EF()
	call eax_162 (retsize: 4;)
		uses: edx:eax_139
		defs: esp:esp_191
l004128C1:
	word32 eax_197 = fn004112B2()
	branch Mem199[eax_197:word32] == 0x00000000 l004128F2
l004128D1:
	word32 esp_205 = esp_137 - 4
	Mem206[esp_205:word32] = eax_197
	branch (word32) SLICE((uint32) (uint8) fn00411217(Mem206[esp_205:word32]), byte, 0) == 0x00000000 l004128F2
l004128E4:
	Mem224[esp_205:word32] = Mem206[eax_197:word32]
	fn004110C8()
l004128F2:
	word32 eax_243 = fn00412A70(es, ds, xmm0)
	branch (word32) SLICE((uint32) (uint8) fn00411230(), byte, 0) != 0x00000000 l0041290F
l0041290F:
	branch (word32) bLoc1D_321 != 0x00000000 l0041291C
l00412917:
	fn00411028()
l0041291C:
	word32 esp_273 = esp_137 - 4
	Mem274[esp_273:word32] = 0x00000000
	Mem276[esp_273 - 4:word32] = 0x00000001
	fn004112C6(Mem276[esp_273:byte])
	eax_112 = eax_243
l004129A2:
	Mem296[fs:0x00000000:word32] = eax_15
	return eax_112
fn004127A0_exit:
l00412906:
	word32 esp_266 = esp_137 - 4
	Mem267[esp_266:word32] = eax_243
	fn004112DA(Mem267[esp_266:int32])


word32 fn00412A70(selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn00412A70_entry:
l00412A70:
	fn0041127B()
	fn004113B1()
	return fn00411064(es, ds, xmm0)
fn00412A70_exit:


byte fn00412B20()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: ebp esp
fn00412B20_entry:
l00412B20:
	fn00413170(fp - 0x00000020)
	return SLICE(SEQ(SLICE(eax_20, word24, 8), false), byte, 0)
fn00412B20_exit:


byte fn00412B70()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: ebp esp
fn00412B70_entry:
l00412B70:
	fn00413170(fp - 0x00000020)
	return SLICE(SEQ(SLICE(eax_26, word24, 8), false), byte, 0)
fn00412B70_exit:


void fn00412CF0(selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00412CF0_entry:
l00412CF0:
	branch dwArg08 >u 0x00000004 l00412D1E
l00412D1E:
	word32 edx_11 = Mem6[0x00418BA8:word32]
	fn00412EF0(edx_11, es, ds, dwArg04, 0x00000001, 0x00000005, edx_11)
l00412CFB:
	word32 ecx_41 = Mem6[dwArg08 * 0x00000004 + 0x0041B014:word32]
	word32 edx_42 = Mem6[dwArg08 * 0x00000004 + 0x00418B94:word32]
	branch ecx_41 == 0xFFFFFFFF l00412D3C
l00412D3C:
	return
l00412D0E:
	fn00412EF0(edx_42, es, ds, dwArg04, ecx_41, dwArg08, edx_42)
	return
fn00412CF0_exit:


word32 fn00412ED0(word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: eax edx
// Trashed: SCZO cl eax edx Top
// Preserved: ebp esp
fn00412ED0_entry:
l00412ED0:
	word32 eax_10 = dwArg04
l00412ED8:
	eax_10 = eax_34 + 0x00000001
	eax_34 = eax_10
	branch Mem6[eax_34:byte] != 0x00 l00412ED8
l00412EDF:
	edxOut = dwArg04
	return eax_10 - dwArg04 - 0x00000001
fn00412ED0_exit:


word32 fn00412EF0(word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00412EF0_entry:
l00412EF0:
	word32 eax_10 = Mem6[0x0041B004:word32] ^ fp - 4
	word32 dwLoc0E38_431 = 0x00000000
	word32 eax_31 = fn004111A9()
	branch eax_31 != 0x00000000 l00412F43
l00412F34:
	dwLoc0E38_431 = fn00411046()
l00412F43:
	word32 eax_57 = MultiByteToWideChar(0x0000FDE9, 0x00000000, dwArg10, 0xFFFFFFFF, 0x00000000, 0x00000000)
	branch eax_57 >=u 0x00000200 l00412F80
l00412F5E:
	branch MultiByteToWideChar(0x0000FDE9, 0x00000000, dwArg10, 0xFFFFFFFF, fp + 0xFFFFF1D0, eax_57) != 0x00000000 l00412F85
l00412F80:
l00412F85:
	word32 esp_124
	byte al_101
	branch SLICE((uint32) (uint8) fn00412B20(), byte, 0) == 0x00 l00412FB8
l00412FB8:
	al_101 = 0x01
l00412F96:
	al_101 = SLICE((uint32) (uint8) fn00412B70(), byte, 0) (alias)
	esp_124 = fp - 0x00000E4C
	branch al_101 != 0x00 l004130DD
l00412FB6:
l00412FBA:
	esp_124 = fp - 0x00000E4C
	branch dwLoc0E38_431 != 0x00000000 l00412FCB
l00412FC3:
	branch eax_31 == 0x00000000 l004130DC
l00412FCB:
	branch al_101 == 0x00 l00412FDD
l00412FCF:
	branch IsDebuggerPresent() != 0x00000000 l004130DC
l00412FDD:
	word32 eax_324
	word32 esp_323
	word32 edi_215 = fn00411401(es, ds, dwArg04 - 0x00000005, fp - 0x00000210, fp + 0xFFFFF1C4, fp - 0x00000418, 0x00000104)
	branch edi_215 == 0x00000000 l0041303E
l0041303E:
	branch WideCharToMultiByte(0x0000FDE9, 0x00000000, fp - 0x00000210, 0xFFFFFFFF, fp - 0x00000724, 0x0000030A, 0x00000000, 0x00000000) == 0x00000000 l00413073
l0041306D:
l00413073:
	branch WideCharToMultiByte(0x0000FDE9, 0x00000000, fp - 0x00000418, 0xFFFFFFFF, fp + 0xFFFFF5D0, 0x0000030A, 0x00000000, 0x00000000) == 0x00000000 l004130A8
l004130A2:
l004130A8:
	fn004111EF()
	call fn00000000 (retsize: 4;)
		uses: edx:edx_327,Stack +0030:dwLoc0E3C,Stack +0E70:dwArg04,Stack +0E74:dwArg08,Stack +0E78:dwArg0C,Stack +0E7C:dwArg10
		defs: eax:eax_324,edx:edx_327,esp:esp_323
l0041300C:
	fn004111EF()
	call edi_215 (retsize: 4;)
		uses: Stack +0004:dwArg08,Stack +0008:fp - 0x00000210,Stack +0010:fp - 0x00000418,Stack +0014:0x00419000,Stack +0018:dwArg0C
		defs: eax:eax_349,edx:edx_351
	esp_323 = fp - 0x00000E68
l004130D4:
	esp_124 = esp_323 + 0x0000001C
	branch eax_324 != 0x00000001 l004130DD
l004130DC:
	int3()
l004130DD:
	word32 esp_375 = esp_124 + 4
	word32 edx_412
	fn00411249(eax_10 ^ fp - 4, edx, Mem367[esp_375 + 4:word32], fp - 4, Mem367[esp_375:word32], Mem367[esp_124:word32], es, ds, Mem367[esp_375 + 4:word32], out edx_412)
	return edx_412
fn00412EF0_exit:


void fn00413170(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp ebx edi esi esp
fn00413170_entry:
l00413170:
	word32 eax_15 = Mem13[fs:0x00000000:word32]
	Mem38[fs:0x00000000:word32] = fp - 0x00000014
	RaiseException(0x406D1388, 0x00000000, 0x00000006, dwArg04)
l004131D4:
	Mem53[fs:0x00000000:word32] = eax_15
	return
fn00413170_exit:


word32 fn00413370(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: ebp esp
fn00413370_entry:
l00413370:
	SetUnhandledExceptionFilter(0x00000000)
	UnhandledExceptionFilter(dwArg04)
	return TerminateProcess(GetCurrentProcess(), 0xC0000409)
fn00413370_exit:


word32 fn004133B0(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31]
// LiveOut: eax edx
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp esp
fn004133B0_entry:
l004133B0:
	word32 eax_12 = fn0041106E(0x00000017)
	byte SCZDOP_41 = cond(eax_12) | SCZDOP
	branch eax_12 == 0x00000000 l004133CB
l004133CB:
	Mem16[0x0041B260:word32] = eax_12
	Mem18[0x0041B25C:word32] = ecx
	Mem20[0x0041B258:word32] = edx
	Mem22[0x0041B254:word32] = ebx
	Mem24[0x0041B250:word32] = esi
	Mem26[0x0041B24C:word32] = edi
	Mem28[0x0041B278:word16] = ss
	Mem30[0x0041B26C:word16] = cs
	Mem32[0x0041B248:word16] = ds
	Mem34[0x0041B244:word16] = es
	Mem36[0x0041B240:word16] = fs
	Mem38[0x0041B23C:word16] = gs
	Mem43[0x0041B270:word32] = SCZDOP_41
	Mem46[0x0041B264:word32] = ebp
	Mem48[0x0041B268:word32] = dwArg00
	Mem50[0x0041B274:word32] = fp + 0x00000004
	Mem52[0x0041B1B0:word32] = 0x00010001
	Mem54[0x0041B16C:word32] = Mem52[0x0041B268:word32]
	Mem55[0x0041B160:word32] = 0xC0000409
	Mem56[0x0041B164:word32] = 0x00000001
	Mem57[0x0041B170:word32] = 0x00000001
	Mem60[0x0041B174:word32] = 0x00000002
	word32 edx_63 = Mem60[0x0041B004:word32]
	word32 eax_72 = fn004110D2(0x00419250)
	edxOut = edx_63
	return eax_72
fn004133B0_exit:
l004133C4:
	__fastfail(0x00000002)


word32 fn00413870(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn00413870_entry:
l00413870:
	word32 edx_13 = dwArg04 + Mem10[dwArg04 + 0x0000003C:word32]
	word32 ecx_20 = edx_13 + 0x00000018 + (word32) Mem16[edx_13 + 0x00000014:word16]
	word32 ecx_25 = (word32) Mem21[edx_13 + 0x00000006:word16] *s 0x00000028 + ecx_20
	word32 dwLoc08_67 = ecx_20
l004138C0:
	word32 eax_35
	branch dwLoc08_67 == ecx_25 l004138EB
l004138EB:
	eax_35 = 0x00000000
l004138C8:
	branch dwArg08 <u Mem31[dwLoc08_67 + 0x0000000C:word32] l004138E9
l004138D3:
	branch dwArg08 >=u Mem31[dwLoc08_67 + 0x0000000C:word32] + Mem31[dwLoc08_67 + 0x00000008:word32] l004138E9
l004138E9:
l004138B7:
	dwLoc08_67 = dwLoc08_67 + 0x00000028
l004138E4:
	eax_35 = dwLoc08_67
l004138ED:
	return eax_35
fn00413870_exit:


byte fn00413920(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn00413920_entry:
l00413920:
	word32 eax_60
	branch dwArg04 != 0x00000000 l00413930
l00413930:
	word24 eax_24_8_63 = SLICE(dwArg04, word24, 8)
	branch (word32) Mem12[dwArg04:word16] == 0x00005A4D l00413948
l00413948:
	word32 ecx_19 = dwArg04 + Mem12[dwArg04 + 0x0000003C:word32]
	word24 eax_24_8_65 = SLICE(ecx_19, word24, 8)
	branch Mem22[ecx_19:word32] == 0x00004550 l00413969
l00413969:
	word32 eax_30 = (word32) Mem28[ecx_19 + 0x00000018:word16]
	word24 eax_24_8_67 = SLICE(eax_30, word24, 8)
	branch eax_30 == 0x0000010B l00413983
l00413983:
	eax_60 = SEQ(eax_24_8_67, 0x01) (alias)
l0041397F:
	eax_60 = SEQ(eax_24_8_67, 0x00) (alias)
l00413965:
	eax_60 = SEQ(eax_24_8_65, 0x00) (alias)
l00413944:
	eax_60 = SEQ(eax_24_8_63, 0x00) (alias)
l0041392C:
	eax_60 = SEQ(eax_24_8, 0x00) (alias)
l00413985:
	return SLICE(eax_60, byte, 0)
fn00413920_exit:


byte fn00413BB0(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ebx ecx edx esi Top
// Preserved: ebp esp
fn00413BB0_entry:
l00413BB0:
	branch dwArg04 != 0x00000000 l00413BC0
l00413BB9:
	Mem10[0x0041B530:byte] = 0x01
l00413BC0:
	word32 eax_73
	fn00411014(edx, ebx, esi, edi, es, ds)
	word32 eax_41 = (word32) fn00411177()
	word24 eax_24_8_74 = SLICE(eax_41, word24, 8)
	branch eax_41 != 0x00000000 l00413BD5
l00413BD5:
	branch (word32) fn0041135C() != 0x00000000 l00413BEF
l00413BEF:
	eax_73 = SEQ(eax_24_8_74, 0x01) (alias)
l00413BE1:
	fn0041110E()
	eax_73 = SEQ(eax_24_8_74, 0x00) (alias)
l00413BD1:
	eax_73 = SEQ(eax_24_8_74, 0x00) (alias)
l00413BF1:
	return SLICE(eax_73, byte, 0)
fn00413BB0_exit:


word32 fn00414030()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn00414030_entry:
l00414030:
	GetSystemTimeAsFileTime(fp - 0x00000010)
	word32 eax_25 = GetCurrentProcessId() ^ (GetCurrentThreadId() ^ 0x00000000)
	QueryPerformanceCounter(fp - 0x00000018)
	return eax_25 ^ dwLoc18 ^ dwLoc14 ^ fp - 0x00000008
fn00414030_exit:


word32 fn004140C0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn004140C0_entry:
l004140C0:
	branch Mem10[0x0041B004:word32] == 0xBB40E64E l004140EC
l004140D0:
	branch (Mem10[0x0041B004:word32] & 0xFFFF0000) == 0x00000000 l004140EC
l004140EC:
	word32 eax_18 = fn00414030()
	word32 dwLoc08_59 = eax_18
	branch eax_18 != 0xBB40E64E l00414106
l00414106:
	branch (eax_18 & 0xFFFF0000) != 0x00000000 l00414122
l00414111:
	dwLoc08_59 = (eax_18 | 0x00004711) << 0x00000010 | eax_18
l004140FD:
	dwLoc08_59 = 0xBB40E64F
l00414122:
	Mem45[0x0041B004:word32] = dwLoc08_59
	edx = ~dwLoc08_59
	Mem48[0x0041B000:word32] = edx
l004140DC:
	Mem51[0x0041B000:word32] = ~Mem10[0x0041B004:word32]
l00414136:
	return edx
fn004140C0_exit:


void fn00414690()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: ebp esp
fn00414690_entry:
l00414690:
	Mem7[0x0041B574:word32] = 0x00000000
	return
fn00414690_exit:


word32 fn00414810(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebx
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00414810_entry:
l00414810:
	word32 eax_10 = Mem6[0x0041B004:word32] ^ fp - 4
	branch Mem11[0x0041B57C:byte] != 0x00 l00414940
l00414830:
	Mem14[0x0041B57C:byte] = 0x01
	word32 eax_104 = fn004149A0(edx, es, ds, out edx, out ebx, out esi, out edi)
	branch eax_104 != 0x00000000 l00414942
l00414844:
	fn0041114F()
	branch eax_104 == 0x00000000 l004148CD
l00414855:
	fn00411078()
	branch eax_104 == 0x00000000 l004148CD
l0041486E:
	eax_104 = fn00414C90(edx, ebx, esi, edi, es, ds, fp - 0x00000418, fp - 0x00000210, 0x00000104, out edx)
	branch eax_104 == 0x00000000 l004148CD
l0041488D:
	fn00411357()
	dwLoc041C = 0x00000900
	branch fp != 0x00000210 l00414942
l004148AB:
	eax_104 = GetLastError()
	branch eax_104 != 0x00000057 l004148CD
l004148B6:
	fn00411357()
	dwLoc041C = 0x00000008
	eax_104 = fp - 0x00000210
	branch fp != 0x00000210 l00414942
l004148CD:
	fn00411357()
	dwLoc041C = 0x00000A00
	branch eax_104 != 0x00000000 l00414942
l004148E5:
	branch GetLastError() != 0x00000057 l00414940
l004148F0:
	fn00411078()
	dwLoc041C = 0x00000104
	branch fp == 0x00000418 l00414940
l0041490A:
	dwLoc041C = 0x00000104
	branch fn00414C90(edx, ebx, esi, edi, es, ds, fp - 0x00000418, fp - 0x00000210, 0x00000104, out edx) == 0x00000000 l00414940
l00414929:
	fn00411357()
	dwLoc041C = 0x00000008
	branch fp != 0x00000210 l00414942
l00414940:
l00414942:
	word32 edx_249
	word32 eax_199 = fn00411249(eax_10 ^ fp - 4, edx, ebx, fp - 4, esi, edi, es, ds, dwLoc041C, out edx_249)
	ebxOut = ebx
	return eax_199
fn00414810_exit:


word32 fn004149A0(word32 edx, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebx edi edx esi
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn004149A0_entry:
l004149A0:
	word32 esp_153
	word32 eax_10 = Mem6[0x0041B004:word32] ^ fp - 4
	fn00411357()
	word32 edi_29 = eax_10
	branch eax_10 != 0x00000000 l00414A09
l004149D0:
	fn00411357()
	edi_29 = eax_10
	esp_153 = fp - 0x0000022C
	branch eax_10 != 0x00000000 l00414A09
l004149E9:
	word32 eax_45 = GetLastError()
	branch eax_45 != 0x00000057 l00414A6D
l004149F4:
	fn00411357()
	edi_29 = eax_45
	esp_153 = fp - 0x0000022C
	branch eax_45 == 0x00000000 l00414A6D
l00414A09:
	word32 eax_65 = GetProcAddress(edi_29, 0x00419410)
	esp_153 = fp - 0x0000022C
	branch eax_65 == 0x00000000 l00414A6D
l00414A1B:
	word32 eax_75 = GetProcAddress(edi_29, 0x00419420)
	esp_153 = fp - 0x0000022C
	branch eax_75 == 0x00000000 l00414A6D
l00414A2D:
	word32 eax_85 = GetProcAddress(edi_29, 0x00419434)
	esp_153 = fp - 0x0000022C
	branch eax_85 == 0x00000000 l00414A6D
l00414A43:
	fn004111EF()
	edx = <invalid>
	branch eax_65() == 0x00000000 l00414A80
l00414A80:
	fn004111EF()
	word32 eax_133 = eax_75()
	fn004111EF()
	eax_85()
	FreeLibrary(edi_29)
	word16 si_170 = SLICE(eax_133, word16, 0)
	edx = <invalid>
	esp_153 = fp - 0x0000025C
	branch eax_133 != 0x00000000 l00414A6D
l00414AD9:
	branch dwLoc0220 != 0x00000001 l00414A6D
l00414AE2:
	branch false l00414A6D
l00414AED:
	edx = 0x00000104
	branch false l00414A6D
l00414AFA:
	word32 ecx_168 = 0x00000103
	branch wLoc0A != si_170 l00414A6D
l00414B0E:
	branch wLoc0C == 0x005C l00414B1F
l00414B15:
	ecx_168 = 0x00000104
l00414B1F:
	branch ~ecx_168 <u 0x00000012 l00414A6D
l00414B2C:
	branch ecx_168 >u 0xFFFFFF0D l00414A6D
l00414B3A:
	Mem191[fp - 0x00000210 + ecx_168 * 0x00000002:word32] = Mem188[0x00419340:word32]
	Mem193[fp - 0x0000020C + ecx_168 * 0x00000002:word32] = Mem191[0x00419344:word32]
	Mem195[fp - 0x00000208 + ecx_168 * 0x00000002:word32] = Mem193[0x00419348:word32]
	Mem197[fp - 0x00000204 + ecx_168 * 0x00000002:word32] = Mem195[0x0041934C:word32]
	Mem199[fp - 0x00000200 + ecx_168 * 0x00000002:word32] = Mem197[0x00419350:word32]
	Mem201[fp - 0x000001FC + ecx_168 * 0x00000002:word32] = Mem199[0x00419354:word32]
	Mem203[fp - 0x000001F8 + ecx_168 * 0x00000002:word32] = Mem201[0x00419358:word32]
	Mem205[fp - 0x000001F4 + ecx_168 * 0x00000002:word32] = Mem203[0x0041935C:word32]
	Mem210[fp - 0x000001F0 + ecx_168 * 0x00000002:word16] = Mem205[0x00419360:word16]
	fn00411357()
	branch fp != 0x00000210 l00414BE3
l00414BC4:
	branch GetLastError() != 0x00000057 l00414BE3
l00414BCF:
	fn00411357()
l00414BE3:
	word32 edx_277
	word32 eax_275 = fn00411249(eax_10 ^ fp - 4, 0x00000104, 0x004194D4, fp - 4, dwLoc0214, dwLoc0214, es, ds, 0x004194D4, out edx_277)
	edxOut = edx_277
	ebxOut = 0x004194D4
	esiOut = dwLoc0214
	ediOut = dwLoc0214
	return eax_275
l00414A66:
	FreeLibrary(edi_29)
	esp_153 = fp - 0x00000240
l00414A6D:
	word32 esp_292 = esp_153 + 4
	word32 edi_291 = Mem290[esp_153:word32]
	word32 esi_293 = Mem290[esp_292:word32]
	word32 ebx_296 = Mem290[esp_292 + 4:word32]
	word32 edx_314
	word32 eax_312 = fn00411249(eax_10 ^ fp - 4, edx, ebx_296, fp - 4, esi_293, edi_291, es, ds, Mem290[esp_292 + 4:word32], out edx_314)
	edxOut = edx_314
	ebxOut = ebx_296
	esiOut = esi_293
	ediOut = edi_291
	return eax_312
fn004149A0_exit:


word32 fn00414C90(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esi esp
fn00414C90_entry:
l00414C90:
	word32 eax_10 = Mem6[0x0041B004:word32] ^ fp - 4
	branch fn004112E9(dwArg04, fp - 0x00000010, 0x00000003, fp - 0x00000610, 0x00000100, fp - 0x00000410, 0x00000100, fp - 0x00000210, 0x00000100) != 0x00000000 l00414D52
l00414CE1:
	branch fn004113CF(fp - 0x00000410, 0x00000009, 0x004194FC) != 0x00000000 l00414D52
l00414CFB:
	branch fn004113CF(fp - 0x00000210, 0x00000004, 0x004194F0) != 0x00000000 l00414D52
l00414D15:
	branch fn0041119A(dwArg08, dwArg0C, fp - 0x00000010, fp - 0x00000610, fp - 0x00000410, fp - 0x00000210) != 0x00000000 l00414D52
l00414D52:
	word32 edx_122
	word32 eax_120 = fn00411249(eax_10 ^ fp - 4, edx, ebx, fp - 4, esi, edi, es, ds, esi, out edx_122)
	edxOut = edx_122
	return eax_120
l00414D3E:
	word32 edx_139
	word32 eax_137 = fn00411249(eax_10 ^ fp - 4, edx, ebx, fp - 4, esi, edi, es, ds, esi, out edx_139)
	edxOut = edx_139
	return eax_137
fn00414C90_exit:


void fn004157C0(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: ebp ebx ecx edi edx esi esp
fn004157C0_entry:
l004157C0:
	word32 eax_101 = dwArg04
	word32 esi_140 = 0x00000000
	word32 edi_148 = 0x00000000
	branch Mem14[dwArg04:byte] == 0x00 l004158A6
l004157D5:
l004157D6:
	byte cl_24 = Mem23[eax_101:byte]
	branch cl_24 == 0x20 l004157E2
l004157DD:
	branch cl_24 != 0x09 l004157E5
l004157E5:
	word32 edx_425
	branch cl_24 != 0x22 l0041581D
l0041581D:
	branch cl_24 == 0x00 l00415859
l00415821:
	branch dwArg08 == 0x00000000 l0041582D
l00415828:
	Mem40[dwArg08 + edi_148 * 0x00000004:word32] = eax_101
	cl_24 = Mem40[eax_101:byte]
l0041582D:
	word24 edx_24_8_388 = SLICE(dwArg08, word24, 8)
	edi_148 = edi_148 + 0x00000001
	branch cl_24 == 0x00 l00415859
l00415859:
l00415832:
	edx_425 = SEQ(edx_24_8_388, cl_24) (alias)
	branch cl_24 == 0x20 l00415848
l00415839:
	edx_425 = SEQ(edx_24_8_388, cl_24) (alias)
	branch cl_24 == 0x09 l00415848
l0041583E:
	byte dl_61 = Mem51[eax_101 + 0x00000001:byte]
	eax_101 = eax_101 + 0x00000001
	cl_24 = dl_61
	edx_425 = SEQ(edx_24_8_388, dl_61) (alias)
	branch dl_61 != 0x00 l00415832
l004157EA:
	byte cl_67 = Mem23[eax_101 + 0x00000001:byte]
	eax_101 = eax_101 + 0x00000001
	branch cl_67 == 0x00 l004157FF
l004157F2:
	branch dwArg08 == 0x00000000 l004157FE
l004157F9:
	Mem76[dwArg08 + edi_148 * 0x00000004:word32] = eax_101
	cl_67 = Mem76[eax_101:byte]
l004157FE:
	edi_148 = edi_148 + 0x00000001
l004157FF:
	word32 edx_100 = eax_101
	word24 edx_24_8_383 = SLICE(eax_101, word24, 8)
	branch cl_67 == 0x00 l00415819
l00415805:
	edx_24_8_383 = SLICE(edx_100, word24, 8) (alias)
	branch cl_67 != 0x22 l0041580F
l0041580A:
	branch Mem107[edx_100:byte] != 0x5C l00415819
l0041580F:
	cl_67 = Mem107[eax_101 + 0x00000001:byte]
	edx_100 = eax_101
	edx_24_8_383 = SLICE(eax_101, word24, 8) (alias)
	eax_101 = eax_101 + 0x00000001
	branch cl_67 != 0x00 l00415805
l00415819:
	edx_425 = SEQ(edx_24_8_383, Mem107[eax_101:byte]) (alias)
l00415848:
	branch SLICE(edx_425, byte, 0) == 0x00 l0041585C
l0041584F:
	branch dwArg08 == 0x00000000 l00415856
l00415853:
	Mem127[eax_101:byte] = 0x00
l00415856:
	eax_101 = eax_101 + 0x00000001
l0041585C:
	branch dwArg08 == 0x00000000 l0041589A
l00415860:
	branch esi_140 == edi_148 l0041589A
l00415864:
	word32 esi_161 = Mem159[dwArg08 + esi_140 * 0x00000004:word32]
	word32 edx_162 = 0x00000000
	byte cl_163 = Mem159[esi_161:byte]
	branch cl_163 == 0x00 l0041589A
l0041586F:
l00415870:
	branch cl_163 != 0x22 l00415890
l00415875:
	branch edx_162 == 0x00000000 l00415890
l00415879:
	branch Mem174[edx_162:byte] != 0x5C l00415890
l0041587E:
	word32 ecx_178 = esi_161
	byte bl_179 = 0x22
l00415882:
	Mem182[edx_162:byte] = bl_179
	edx_162 = ecx_430
	bl_179 = Mem182[ecx_430 + 0x00000001:byte]
	ecx_178 = ecx_430 + 0x00000001
	ecx_430 = ecx_178
	branch bl_179 != 0x00 l00415882
l0041588E:
	Mem190[ecx_430:byte] = bl_179
l00415890:
	cl_163 = Mem193[esi_161 + 0x00000001:byte]
	edx_162 = esi_161
	esi_161 = esi_161 + 0x00000001
	branch cl_163 != 0x00 l00415870
l0041589A:
	esi_140 = edi_148
	branch Mem207[eax_101:byte] != 0x00 l004157D6
l004158A5:
l004158A6:
	branch dwArg08 == 0x00000000 l004158B4
l004158AD:
	Mem246[dwArg08 + edi_148 * 0x00000004:word32] = 0x00000000
l004158B4:
	return
fn004157C0_exit:
l004157E2:
	eax_101 = eax_101 + 0x00000001


word32 fn00415920(selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: P ebp ebx edi esi esp
fn00415920_entry:
l00415920:
	word32 eax_18 = GetCommandLineW()
	word32 eax_22 = (word32) Mem17[eax_18:word16]
	word32 esi_20 = 0x00000002
	word32 edx_21 = eax_18 + 0x00000002
	branch SLICE(eax_22, word16, 0) == 0x0000 l0041595D
l00415940:
	word16 cx_236 = SLICE(eax_22, word16, 0)
l00415942:
	branch cx_236 == 0x0020 l0041594E
l00415948:
	branch cx_236 != 0x0009 l0041594F
l0041594E:
	esi_20 = esi_20 + 0x00000001
l0041594F:
	word32 eax_43 = (word32) Mem17[edx_21 + 0x00000000:word16]
	edx_21 = edx_21 + 0x00000002
	cx_236 = SLICE(eax_43, word16, 0) (alias)
	branch SLICE(eax_43, word16, 0) != 0x0000 l00415942
l0041595D:
	word32 eax_74 = WideCharToMultiByte(0x0000FDE9, 0x00000000, eax_18, 0xFFFFFFFF, 0x00000000, 0x00000000, 0x00000000, 0x00000000)
	branch eax_74 <= 0x00000000 l004159F5
l0041597C:
	word32 eax_87 = eax_74 + esi_20 * 0x00000004
	word32 eax_95 = VirtualAlloc(0x00000000, eax_87, 0x00003000, 0x00000004)
	branch eax_95 == 0x00000000 l004159F5
l00415998:
	word32 esi_108 = eax_95 + esi_20 * 0x00000004
	WideCharToMultiByte(0x0000FDE9, 0x00000000, eax_18, 0xFFFFFFFF, esi_108, eax_74, 0x00000000, 0x00000000)
	branch esi_108 == 0x00000000 l004159F5
l004159F5:
	fn0041140B()
	return 0x00000000
l004159B7:
	fn004157C0(esi_108, eax_95)
	fn004111CC()
	word32 ebx_196
	word32 eax_195 = fn00411307(es, ds, xmm0, out ebx_196)
	VirtualFree(ebx_196, eax_87, 0x00004000)
	VirtualFree(ebx_196, 0x00000000, 0x00008000)
	return eax_195
fn00415920_exit:


